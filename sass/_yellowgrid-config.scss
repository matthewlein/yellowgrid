/*
 * Bastard of
 * Proportional Grids https://github.com/mattberridge/Proportional-Grids/
 * and CSSWizardry Grids https://github.com/csswizardry/csswizardry-grids
 *
 * with patches and additions as needed for me.
 */


//-------------------------------------------------------
// GRID SETTINGS
//-------------------------------------------------------

// this is the fixed gutter between columns
$grid-gutter: 18px;

// this sets your class names
$grid-wrap-class: "grid";
$grid-col-class: "grid__col";

//-------------------------------------------------------
// GRID MIXINS
//-------------------------------------------------------

@mixin clearfix {
    &:after, &:before {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
    & {
        *zoom: 1;
    }
}

@mixin set-gutter($gutter) {

    margin-left: -$gutter;
    // margin-bottom: $gutter;

    .#{$grid-col-class} {
        padding-left: $gutter;
    }

}

@mixin grid-config {

    .#{$grid-wrap-class} {
        margin-left: -$grid-gutter;
        clear: both;
        // clearfixed to contain floats
        @include clearfix;
    }

    .#{$grid-col-class} {
        float: left;
        // the gutter between columns
        padding-left: $grid-gutter;
        width: 100%;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
    }

    .#{$grid-wrap-class}--reverse .#{$grid-col-class} {
        float: right;
    }

    .#{$grid-wrap-class}--double-gutter {
        @include set-gutter($grid-gutter*2);
    }

    .#{$grid-wrap-class}--half-gutter {
        @include set-gutter($grid-gutter/2);
    }

    .#{$grid-wrap-class}--no-gutter {
        @include set-gutter(0);
    }

    .#{$grid-wrap-class}--reset-gutter {
        @include set-gutter($grid-gutter);
    }

    // reset for list grids
    ul.#{$grid-wrap-class},
    ol.#{$grid-wrap-class} {
        padding-left: 0;
        list-style: none;
    }

    li.#{$grid-col-class} {
        margin-left: 0;
        margin-bottom: 0;
    }

}

// set the proportions you want to use
// $namespace relates to the class prefix e.g. bp2-col to target breakpoint 2
@mixin grid-setup($namespace) {

    // sets make one whole row all the same width.
    // use .set-X on the .grid element
    .#{$namespace},
    .#{$namespace}--1,
    .#{$namespace}--full,
    .#{$grid-wrap-class}--set--#{$namespace}--1 .#{$grid-col-class} {
        width: 100%;
    }
    .#{$namespace}--1_2,
    .#{$grid-wrap-class}--set--#{$namespace}--1_2 .#{$grid-col-class} {
        width: 50%;
    }
    .#{$namespace}--1_3,
    .#{$grid-wrap-class}--set--#{$namespace}--1_3 .#{$grid-col-class} {
        width: 33.333%;
    }
    .#{$namespace}--1_4,
    .#{$grid-wrap-class}--set--#{$namespace}--1_4 .#{$grid-col-class} {
        width: 25%;
    }
    .#{$namespace}--1_5,
    .#{$grid-wrap-class}--set--#{$namespace}--1_5 .#{$grid-col-class} {
        width: 20%;
    }
    .#{$namespace}--2_5 {
        width: 40%;
    }
    .#{$namespace}--3_5 {
        width: 60%;
    }
    .#{$namespace}--4_5 {
        width: 80%;
    }
    .#{$namespace}--2_3 {
        width: 66.666%;
    }
    .#{$namespace}--3_4 {
        width: 75%;
    }

     /*
     *  item set 'row' clearing
     *    uses nth child to clear the row
     *    X in a row, all the same
     *    widths set above
     *    ie8 simply gets no clearing for these sets
     */

    // rows of 2
    .#{$grid-wrap-class}--set--#{$namespace}--1_2 .#{$grid-col-class} {
        &:nth-child(2n+1) {
            clear: both;
        }
    }
    // rows of 3
    .#{$grid-wrap-class}--set--#{$namespace}--1_3 .#{$grid-col-class} {
        &:nth-child(2n+1) {
            clear: none;
        }
        &:nth-child(3n+1) {
            clear: both;
        }
    }
    // rows of 4
    .#{$grid-wrap-class}--set--#{$namespace}--1_4 .#{$grid-col-class} {
        &:nth-child(2n+1) {
            clear: none;
        }
        &:nth-child(3n+1) {
            clear: none;
        }
        &:nth-child(4n+1) {
            clear: both;
        }
    }

    //Push classes
    .#{$namespace}--push--0,
    .#{$namespace}--push--none {
        position: static;
        left: 0%;
    }
    .#{$namespace}--push--1_2 {
        position: relative;
        left: 50%;
    }
    .#{$namespace}--push--1_3 {
        position: relative;
        left: 33%;
    }
    .#{$namespace}--push--1_4 {
        position: relative;
        left: 25%;
    }
    .#{$namespace}--push--1_5 {
        position: relative;
        left: 20%;
    }
    .#{$namespace}--push--2_5 {
        position: relative;
        left: 40%;
    }
    .#{$namespace}--push--3_5 {
        position: relative;
        left: 60%;
    }
    .#{$namespace}--push--4_5 {
        position: relative;
        left: 80%;
    }
    .#{$namespace}--push--2_3 {
        position: relative;
        left: 66.666%;
    }
    .#{$namespace}--push--3_4 {
        position: relative;
        left: 75%;
    }

    // Centered classes
    //   extends #{$namespace}-{size}
    .#{$namespace}--1_2--centered {
        position: relative;
        left: 25%;
    }
    .#{$namespace}--1_3--centered {
        position: relative;
        left: 33.333%;
    }
    .#{$namespace}--1_4--centered {
        position: relative;
        left: 37.5%;
    }
    .#{$namespace}--1_5--centered {
        position: relative;
        left: 40%;
    }
    .#{$namespace}--2_5--centered {
        position: relative;
        left: 30%;
    }
    .#{$namespace}--3_5--centered {
        position: relative;
        left: 20%;
    }
    .#{$namespace}--4_5--centered {
        position: relative;
        left: 10%;
    }
    .#{$namespace}--2_3--centered {
        position: relative;
        left: 16.6665%;
    }
    .#{$namespace}--3_4--centered {
        position: relative;
        left: 12.5%;
    }

    // Yucky hidden class
    .#{$namespace}--hidden {
        display: none;
    }
    .#{$namespace}--visible {
        display: block;
    }

}


// account for no border-box in IE7/6
@mixin grid-config-oldie {

    .lt-ie8 {

        .#{$grid-wrap-class} {
            margin-left: 0;
        }

        .#{$grid-col-class} {
            padding: 0;
            margin-left: 5%;

            &:first-child {
                margin-left: 0;
            }
        }

    }

}

// amend widths slightly for IE7/6
@mixin grid-setup-oldie($namespace) {

    .lt-ie8 {
        #{$namespace},
        .#{$namespace}--1,
        .#{$namespace}--full,
        #{$grid-wrap-class}--set--#{$namespace}--1 .#{$grid-col-class} {
            width: 99.95%;
        }
        .#{$namespace}--1_2,
        .#{$grid-wrap-class}--set--#{$namespace}--1_2 .#{$grid-col-class} {
            width: 47.45%;
        }
        .#{$namespace}--1_3,
        .#{$grid-wrap-class}--set--#{$namespace}--1_3 .#{$grid-col-class} {
            width: 29.55%;
        }
        .#{$namespace}--2_3 {
            width: 64.95%;
        }
        .#{$namespace}--1_4,
        .#{$grid-wrap-class}--set--#{$namespace}--1_4 .#{$grid-col-class} {
            width: 19.95%;
        }
        .#{$namespace}--3_4 {
            width: 74.95%;
        }
        .#{$namespace}--1_5,
        .#{$grid-wrap-class}--set--#{$namespace}--1_5 .#{$grid-col-class} {
            width: 14.95%;
        }
        .#{$namespace}--2_5,
        .#{$grid-wrap-class}--set--#{$namespace}--2_5 .#{$grid-col-class} {
            width: 34.95%;
        }
        .#{$namespace}--3_5,
        .#{$grid-wrap-class}--set--#{$namespace}--3_5 .#{$grid-col-class} {
            width: 54.95%;
        }
        .#{$namespace}--4_5,
        .#{$grid-wrap-class}--set--#{$namespace}--4_5 .#{$grid-col-class} {
            width: 74.95%;
        }
    }

}

//-------------------------------------------------------
// ADDED SUPPORT
// Mixins to work with http://goo.gl/uwyT6
//-------------------------------------------------------
$old-ie: null !default;

// include grids-init to set up your grids with your base class
// i.e. @include grids-init("col");
@mixin grids-init($class) {

    @include grid-config;
    @include grid-setup($class);

    @if $old-ie {
        @include grid-config-oldie;
        @include grid-setup-oldie($class);
    }

}

// include grids-include with your class for each breakpoint
@mixin grid-include($class) {

    @include grid-setup($class);

    @if $old-ie {
        @include grid-setup-oldie($class);
    }

}